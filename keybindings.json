// Place your key bindings in this file to override the defaultsauto[]
[
	{
		"key": "ctrl+shift+i",
		"command": "toggleVim"
	},
	{
		"key": "ctrl+shift+t",
		"command": "workbench.action.terminal.toggleTerminal"
	},
	{
		"key": "ctrl+shift+l",
		"command": "bookmarksExplorer.focus"
	},
	{
		"key": "ctrl+a",
		"command": "git.stageAll",
		"when": "listFocus && sideBarFocus && activeViewlet == 'workbench.view.scm'"
	},
	{
		"key": "ctrl+s",
		"command": "git.stage",
		"when": "listFocus && sideBarFocus && activeViewlet == 'workbench.view.scm'"
	},
	{
		"key": "ctrl+w",
		"command": "workbench.action.closeActiveEditor",
		"when": ""
	},
	{
		"key": "ctrl+u",
		"command": "git.unstage",
		"when": "listFocus && sideBarFocus && activeViewlet == 'workbench.view.scm'"
	},
	{
		"key": "ctrl+d",
		"command": "git.clean",
		"when": "listFocus && sideBarFocus && activeViewlet == 'workbench.view.scm'"
	},
	{
		"key": "ctrl+e",
		"command": "workbench.view.explorer",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.scm'"
	},
	{
		"key": "ctrl+shift+j",
		"command": "extension.vim_ctrl+n",
		"when": "suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
	},
	{
		"key": "ctrl+shift+k",
		"command": "extension.vim_ctrl+p",
		"when": "suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
	},
	{
		"key": "shift+k",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "listFocus && sideBarFocus && activeViewlet == 'workbench.view.scm'"
	},
	{
		"key": "shift+k",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "listFocus && !inputFocus && explorerViewletVisible && filesExplorerFocus"
	},
	{
		"key": "r",
		"command": "renameFile",
		"when": "listFocus && !inputFocus && explorerViewletVisible && filesExplorerFocus"
	},
	{
		"key": "i",
		"command": "explorer.newFile",
		"when": "listFocus && !inputFocus && explorerViewletVisible && filesExplorerFocus"
	},
	{
		"key": "o",
		"command": "explorer.newFolder",
		"when": "listFocus && !inputFocus && explorerViewletVisible && filesExplorerFocus"
	},
	{
		"key": "f",
		"command": "filesExplorer.findInFolder",
		"when": "listFocus && !inputFocus && explorerViewletVisible && filesExplorerFocus"
	},
	{
		"key": "t",
		"command": "openInTerminal",
		"when": "listFocus && !inputFocus && explorerViewletVisible && filesExplorerFocus"
	},
	{
		"key": "ctrl+]",
		"command": "editor.action.indentLines"
	},
	{
		"key": "ctrl+[",
		"command": "outdent"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.files.newUntitledFile"
	},
	{
		"key": "ctrl+shift+e",
		"command": "workbench.files.action.focusFilesExplorer"
	},
	{
		"key": "ctrl+shift+t",
		"command": "workbench.action.terminal.focus"
	},
	{
		"key": "ctrl+shift+m",
		"command": "workbench.action.focusActiveEditorGroup"
	},
	{
		"key": "ctrl+enter",
		"command": "renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus"
	},
	{
		"key": "enter",
		"command": "-renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus"
	},
	{
		"key": "enter",
		"command": "list.select",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "ctrl+1",
		"command": "extension.partialDiff.markSection1"
	},
	{
		"key": "ctrl+2",
		"command": "extension.partialDiff.markSection2AndTakeDiff"
	},
	{
		"key": "ctrl+shift+s",
		"command": "-workbench.action.files.saveAs"
	},
	{
		"key": "ctrl+shift+s",
		"command": "-workbench.action.files.saveLocalFile",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "ctrl+shift+e",
		"command": "-workbench.view.explorer"
	},
	{
		"key": "ctrl+shift+e",
		"command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+.",
		"command": "editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+a",
		"command": "-editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+m",
		"command": "-workbench.actions.view.problems",
		"when": "workbench.panel.markers.view.active"
	},
	{
		"key": "ctrl+shift+j",
		"command": "search.action.focusNextSearchResult",
		"when": "hasSearchResult || inSearchEditor"
	},
	{
		"key": "ctrl+shift+k",
		"command": "search.action.focusPreviousSearchResult",
		"when": "hasSearchResult || inSearchEditor"
	},
	{
		"key": "ctrl+b",
		"command": "git.checkout",
	},
	{
		"key": "ctrl+o",
		"command": "extension.vim_ctrl+o",
		"when": "editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"
	},
	{
		"key": "ctrl+i",
		"command": "extension.vim_ctrl+i",
		"when": "editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"
	},
	{
		"key": "ctrl+r",
		"command": "redo",
		"when": "editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"
	},
	{
		"key": "ctrl+i",
		"command": "-extension.vim_ctrl+i",
		"when": "editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"
	},
	{
		"key": "shift+enter",
		"command": "openReferenceToSide",
		"when": "listFocus && referenceSearchVisible && !inputFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "-openReferenceToSide",
		"when": "listFocus && referenceSearchVisible && !inputFocus"
	},
	{
		"key": "shift+enter",
		"command": "explorer.openToSide",
		"when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "-explorer.openToSide",
		"when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
	},
	{
		"key": "shift+enter",
		"command": "interactive.execute",
		"when": "resourceScheme == 'vscode-interactive'"
	},
	{
		"key": "ctrl+enter",
		"command": "-interactive.execute",
		"when": "resourceScheme == 'vscode-interactive'"
	},
	{
		"key": "ctrl+u",
		"command": "extension.vim_ctrl+u",
		"when": "editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"
	},
	{
		"key": "ctrl+u",
		"command": "-extension.vim_ctrl+u",
		"when": "editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"
	},
	{
		"key": "ctrl+up",
		"command": "-extension.vim_ctrl+up",
		"when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "ctrl+d",
		"command": "-extension.vim_ctrl+d",
		"when": "editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"
	},
	{
		"key": "ctrl+down",
		"command": "-extension.vim_ctrl+down",
		"when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "ctrl+k ctrl+d",
		"command": "-editor.action.moveSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+d",
		"command": "-extension.vim_ctrl+d",
		"when": "editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"
	},
	{
		"key": "ctrl+d",
		"command": "extension.vim_ctrl+d"
	},
	{
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
	{
    "key": "ctrl+shift+l",
    "command": "workbench.view.extension.bookmarks"
	},
	{
		"key": "ctrl+v",
		"command": "workbench.action.terminal.paste",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+v",
		"command": "-workbench.action.terminal.paste",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+p",
		"command": "workbench.action.quickOpen",
		"when": "!terminalFocus"
	},
	{
		"key": "ctrl+p",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "ctrl+shift+-",
		"command": "-workbench.action.navigateForward",
		"when": "canNavigateForward"
	},
	{
		"key": "ctrl+shift+[",
		"command": "workbench.action.previousEditorInGroup"
	},
	{
		"key": "ctrl+k ctrl+pageup",
		"command": "-workbench.action.previousEditorInGroup"
	},
	{
		"key": "ctrl+shift+]",
		"command": "workbench.action.nextEditorInGroup"
	},
	{
		"key": "ctrl+k ctrl+pagedown",
		"command": "-workbench.action.nextEditorInGroup"
	},
	{
		"key": "ctrl+j",
		"command": "-workbench.action.togglePanel"
	},
	{
		"key": "ctrl+tab",
		"command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
		"when": "!activeEditorGroupEmpty"
	},
	{
		"key": "ctrl+tab",
		"command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
		"when": "inEditorsPicker && inQuickOpen"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-workbench.action.showTreeHover",
		"when": "customTreeView && listFocus && !inputFocus"
	},
	{
		"key": "ctrl+k r",
		"command": "-workbench.action.files.revealActiveFileInWindows"
	},
	{
		"key": "ctrl+k ctrl+o",
		"command": "-workbench.action.files.openLocalFolder",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "ctrl+k p",
		"command": "-workbench.action.files.copyPathOfActiveFile"
	},
	{
		"key": "ctrl+k shift+o",
		"command": "-workbench.action.compareEditor.openSide",
		"when": "inDiffEditor"
	},
	{
		"key": "ctrl+k up",
		"command": "-views.moveViewUp",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+k right",
		"command": "-views.moveViewRight",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+k left",
		"command": "-views.moveViewLeft",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+k down",
		"command": "-views.moveViewDown",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+k f2",
		"command": "-togglePeekWidgetFocus",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "ctrl+k ctrl+e",
		"command": "-keybindings.editor.defineWhenExpression",
		"when": "inKeybindings && keybindingFocus"
	},
	{
		"key": "ctrl+k ctrl+a",
		"command": "-keybindings.editor.addKeybinding",
		"when": "inKeybindings && keybindingFocus"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "-editor.action.addCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+alt+k",
		"command": "-bookmarks.toggle",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k m",
		"command": "-workbench.action.editor.changeLanguageMode",
		"when": "!notebookEditorFocused"
	},
	{
		"key": "ctrl+k ctrl+,",
		"command": "-editor.createFoldingRangeFromSelection",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-editor.debug.action.showDebugHover",
		"when": "editorTextFocus && inDebugMode"
	},
	{
		"key": "ctrl+k ctrl+k",
		"command": "-editor.action.defineKeybinding",
		"when": "resource == 'vscode-userdata:/home/adam/.config/Code/User/keybindings.json'"
	},
	{
		"key": "ctrl+shift+k",
		"command": "-editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k e",
		"command": "-workbench.files.action.focusOpenEditorsView",
		"when": "workbench.explorer.openEditorsView.active"
	},
	{
		"key": "ctrl+k c",
		"command": "-workbench.files.action.compareWithClipboard"
	},
	{
		"key": "ctrl+k d",
		"command": "-workbench.files.action.compareWithSaved"
	},
	{
		"key": "ctrl+k ctrl+alt+c",
		"command": "-copyFilePath",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k ctrl+shift+alt+c",
		"command": "-copyRelativeFilePath",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k o",
		"command": "-workbench.action.files.showOpenedFileInNewWindow",
		"when": "emptyWorkspaceSupport"
	},
	{
		"key": "ctrl+k ctrl+o",
		"command": "-workbench.action.files.openFolder",
		"when": "openFolderWorkspaceSupport"
	},
	{
		"key": "ctrl+k s",
		"command": "-workbench.action.files.saveWithoutFormatting"
	},
	{
		"key": "ctrl+k ctrl+0",
		"command": "-editor.foldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+/",
		"command": "-editor.foldAllBlockComments",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+8",
		"command": "-editor.foldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+-",
		"command": "-editor.foldAllExcept",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+1",
		"command": "-editor.foldLevel1",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+2",
		"command": "-editor.foldLevel2",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+3",
		"command": "-editor.foldLevel3",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+4",
		"command": "-editor.foldLevel4",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+5",
		"command": "-editor.foldLevel5",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+6",
		"command": "-editor.foldLevel6",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+7",
		"command": "-editor.foldLevel7",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+[",
		"command": "-editor.foldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+f",
		"command": "-editor.action.formatSelection",
		"when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "-git.revertSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	{
		"key": "ctrl+k ctrl+alt+s",
		"command": "-git.stageSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	{
		"key": "ctrl+k ctrl+n",
		"command": "-git.unstageSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	{
		"key": "ctrl+k ctrl+q",
		"command": "-workbench.action.navigateToLastEditLocation"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "-workbench.action.keybindingsReference"
	},
	{
		"key": "ctrl+k v",
		"command": "-markdown.showPreviewToSide",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "-notebook.cell.collapseCellInput",
		"when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
	},
	{
		"key": "ctrl+k t",
		"command": "-notebook.cell.collapseCellOutput",
		"when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "-notebook.cell.expandCellInput",
		"when": "notebookCellInputIsCollapsed && notebookCellListFocused"
	},
	{
		"key": "ctrl+k t",
		"command": "-notebook.cell.expandCellOutput",
		"when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
	},
	{
		"key": "ctrl+k ctrl+shift+\\",
		"command": "-notebook.cell.split",
		"when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
	},
	{
		"key": "ctrl+k f12",
		"command": "-editor.action.revealDefinitionAside",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+k ctrl+t",
		"command": "-workbench.action.selectTheme"
	},
	{
		"key": "ctrl+k ctrl+s",
		"command": "-workbench.action.openGlobalKeybindings"
	},
	{
		"key": "ctrl+k ctrl+u",
		"command": "-editor.action.removeCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+.",
		"command": "-editor.removeManualFoldingRanges",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+k",
		"command": "-editor.action.selectFromAnchorToCursor",
		"when": "editorTextFocus && selectionAnchorSet"
	},
	{
		"key": "ctrl+k ctrl+b",
		"command": "-editor.action.setSelectionAnchor",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-editor.action.showHover",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+l",
		"command": "-editor.toggleFold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+x",
		"command": "-editor.action.trimTrailingWhitespace",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+j",
		"command": "-editor.unfoldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+9",
		"command": "-editor.unfoldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+=",
		"command": "-editor.unfoldAllExcept",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+]",
		"command": "-editor.unfoldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+shift+w",
		"command": "-workbench.action.closeAllGroups"
	},
	{
		"key": "ctrl+k ctrl+w",
		"command": "-workbench.action.closeAllEditors"
	},
	{
		"key": "ctrl+k w",
		"command": "-workbench.action.closeEditorsInGroup"
	},
	{
		"key": "ctrl+k u",
		"command": "-workbench.action.closeUnmodifiedEditors"
	},
	{
		"key": "ctrl+k ctrl+up",
		"command": "-workbench.action.focusAboveGroup"
	},
	{
		"key": "ctrl+k ctrl+down",
		"command": "-workbench.action.focusBelowGroup"
	},
	{
		"key": "ctrl+k ctrl+left",
		"command": "-workbench.action.focusLeftGroup"
	},
	{
		"key": "ctrl+k ctrl+right",
		"command": "-workbench.action.focusRightGroup"
	},
	{
		"key": "ctrl+k ctrl+shift+\\",
		"command": "-workbench.action.joinEditorInGroup",
		"when": "sideBySideEditorActive"
	},
	{
		"key": "ctrl+k enter",
		"command": "-workbench.action.keepEditor"
	},
	{
		"key": "ctrl+k down",
		"command": "-workbench.action.moveActiveEditorGroupDown"
	},
	{
		"key": "ctrl+k left",
		"command": "-workbench.action.moveActiveEditorGroupLeft"
	},
	{
		"key": "ctrl+k right",
		"command": "-workbench.action.moveActiveEditorGroupRight"
	},
	{
		"key": "ctrl+k up",
		"command": "-workbench.action.moveActiveEditorGroupUp"
	},
	{
		"key": "ctrl+k shift+enter",
		"command": "-workbench.action.pinEditor",
		"when": "!activeEditorIsPinned"
	},
	{
		"key": "ctrl+k ctrl+p",
		"command": "-workbench.action.showAllEditors"
	},
	{
		"key": "ctrl+k ctrl+shift+\\",
		"command": "-workbench.action.splitEditorInGroup",
		"when": "activeEditorCanSplitInGroup"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorOrthogonal"
	},
	{
		"key": "ctrl+k ctrl+h",
		"command": "-workbench.action.output.toggleOutput",
		"when": "workbench.panel.output.active"
	},
	{
		"key": "ctrl+k z",
		"command": "-workbench.action.toggleZenMode"
	},
	{
		"key": "ctrl+k shift+enter",
		"command": "-workbench.action.unpinEditor",
		"when": "activeEditorIsPinned"
	},
	{
		"key": "ctrl+k f",
		"command": "-workbench.action.closeFolder",
		"when": "emptyWorkspaceSupport && workbenchState != 'empty'"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenSelectPrevious"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorUp"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorRight"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorLeft"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorDown"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-workbench.action.terminal.focusHover",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "ctrl+k i",
		"command": "-interactiveEditor.start",
		"when": "interactiveEditorHasProvider && !editorReadonly"
	},
	{
		"key": "ctrl+k",
		"command": "-extension.vim_ctrl+k",
		"when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "up",
		"command": "-selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	}
]
